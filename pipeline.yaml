AWSTemplateFormatVersion: '2010-09-09'
Description: This template will build the pipeline needed to deploy an Angular application
Parameters:
  EnvironmentName:
    Type: String
    Default: production
    Description: The name of the environment that this pipeline is being created for
    # TODO: Ensure environment name has to be lowercase
  GitHubUser:
    Type: String
    Description: The username of the Github user that has access to the Github repository
  GitHubRepository:
    Type: String
    Description: The name of the Github repository
  GitHubBranch:
    Type: String
    Description: The name of the branch in the Github repository
  GitHubOAuthToken: 
    Type: String
    Description: Create a token with your repository and give 'admin:repo_hook' permissions
Resources:
  AngularAppS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub angular-devops-app-${EnvironmentName}
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
  AngularAppBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: !Sub AngularAppBuildPolicy-${EnvironmentName}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:*:log-group:/aws/codebuild/AngularAppCodeBuild-${EnvironmentName}:log-stream:'
              - 
                Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents' # This is not working yet
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:*:log-group:/aws/codebuild/AngularAppCodeBuild-${EnvironmentName}:log-stream:*'
              -
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                Resource: !Sub 'arn:aws:s3:::angular-devops-pipeline-artifacts-${EnvironmentName}/*'
  AngularAppDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: !Sub AngularAppDeployPolicy-${EnvironmentName}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:*:log-group:/aws/codebuild/AngularAppCodeDeploy-${EnvironmentName}:log-stream:'
              - 
                Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents' # This is not working yet
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:*:log-group:/aws/codebuild/AngularAppCodeDeploy-${EnvironmentName}:log-stream:*'
              -
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                Resource: !Sub 'arn:aws:s3:::angular-devops-pipeline-artifacts-${EnvironmentName}/*'
  AngularAppCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: !Sub AngularAppPipelinePolicy-${EnvironmentName}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Effect: Allow
                Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Resource: 
                  - !Sub 'arn:aws:codebuild:${AWS::Region}:*:project/AngularAppCodeBuild-${EnvironmentName}'
                  - !Sub 'arn:aws:codebuild:${AWS::Region}:*:project/AngularAppCodeDeploy-${EnvironmentName}'
              -
                Effect: Allow
                Action:
                  - 's3:PutObject'
                Resource: !Sub 'arn:aws:s3:::angular-devops-pipeline-artifacts-${EnvironmentName}/*'
  AngularAppCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub AngularAppCodeBuild-${EnvironmentName}
      Description: !Sub Code Build Project for AngularApp-${EnvironmentName}
      ServiceRole: !Ref AngularAppBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: build.yml
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.1.0
        Type: LINUX_CONTAINER
      Artifacts:
        Name: Deployments
        Type: CODEPIPELINE
  AngularAppCodeDeployProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub AngularAppCodeDeploy-${EnvironmentName}
      Description: !Sub Code Deploy Project for AngularApp-${EnvironmentName}
      ServiceRole: !Ref AngularAppDeployRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub 'aws s3 cp --recursive --acl public-read . s3://angular-devops-app-${EnvironmentName}/'
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.1.0
        Type: LINUX_CONTAINER
      Artifacts:
        Name: Deployments
        Type: CODEPIPELINE
  AngularAppArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub angular-devops-pipeline-artifacts-${EnvironmentName}
  AngularAppPipelineStack:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub  AngularAppPipeline-${EnvironmentName}
      ArtifactStore:
        Type: S3
        Location: !Ref AngularAppArtifactBucket
      RoleArn: !Sub ${AngularAppCodePipelineRole.Arn}
      Stages:
        - 
          Name: Source
          Actions:
            - 
              Name: Github
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceCode
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepository
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
        -
          Name: Build
          Actions:
            -
              Name: Build
              InputArtifacts:
                - Name: SourceCode
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: Deployments
              Configuration:
                ProjectName: !Ref AngularAppCodeBuildProject
        -
          Name: Deployment
          Actions:
            -
              Name: Deployment
              InputArtifacts:
                - Name: Deployments
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref AngularAppCodeDeployProject